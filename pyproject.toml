[build-system]
build-backend = 'flit_core.buildapi'
requires = ['flit_core>=3.4,<4']

[project]
authors = [
  {name = 'Sebastiaan P. Huber', email = 'mail@sphuber.net'},
  {name = 'Adam Grofe', email = 'v-adamgrofe@microsoft.com'}
]
classifiers = [
  'Development Status :: 3 - Alpha',
  'Framework :: AiiDA',
  'License :: OSI Approved :: MIT License',
  'Operating System :: POSIX :: Linux',
  'Operating System :: MacOS :: MacOS X',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Topic :: Scientific/Engineering'
]
dependencies = [
  'aiida-core[atomic_tools]~=2.3',
  'aiida-shell>=0.5.3',
  'dill',
  'numpy',
  'pint',
  'pyscf[geomopt]~=2.2,<2.4'
]
dynamic = ['description', 'version']
keywords = ['aiida', 'workflows', 'pyscf']
license = {file = 'LICENSE.txt'}
name = 'aiida-pyscf'
readme = 'README.md'
requires-python = '>=3.8'

[project.entry-points.'aiida.calculations']
'pyscf.base' = 'aiida_pyscf.calculations.base:PyscfCalculation'

[project.entry-points.'aiida.parsers']
'pyscf.base' = 'aiida_pyscf.parsers.base:PyscfParser'

[project.entry-points.'aiida.workflows']
'pyscf.base' = 'aiida_pyscf.workflows.base:PyscfBaseWorkChain'

[project.optional-dependencies]
pre-commit = [
  'mypy==1.3.0',
  'pre-commit~=2.17'
]
tests = [
  'packaging',
  'pgtest~=1.3,>=1.3.1',
  'pytest~=7.2',
  'pytest-regressions'
]

[project.urls]
Source = 'https://github.com/microsoft/aiida-pyscf'

[tool.flit.module]
name = 'aiida_pyscf'

[tool.flit.sdist]
exclude = [
  'tests',
  '.gitignore',
  '.pre-commit-config.yaml'
]

[tool.flynt]
fail-on-change = true
line-length = 120

[tool.mypy]
check_untyped_defs = true
no_warn_no_return = true
scripts_are_modules = true
show_error_codes = true
show_traceback = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
check_untyped_defs = true
follow_imports = 'skip'
module = 'aiida_pyscf.*'

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  'ase.*',
  'dill.*',
  'pint.*',
  'plumpy.*',
  'ruamel.*'
]

[tool.pytest.ini_options]
filterwarnings = [
  'ignore:Creating AiiDA configuration folder.*:UserWarning'
]

[tool.ruff]
ignore = [
  'D203',  # Incompatible with D211 `no-blank-line-before-class`
  'D213',  # Incompatible with D212 `multi-line-summary-second-line`
  'PLR2004'  # Magic value used in comparison
]
line-length = 120
select = [
  'E',  # pydocstyle
  'W',  # pydocstyle
  'F',  # pyflakes
  'I',  # isort
  'N',  # pep8-naming
  'D',  # pydocstyle
  'PLC',  # pylint-convention
  'PLE',  # pylint-error
  'PLR',  # pylint-refactor
  'PLW',  # pylint-warning
  'RUF'  # ruff
]

[tool.ruff.format]
quote-style = 'single'
